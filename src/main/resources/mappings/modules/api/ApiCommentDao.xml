<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.gome.trend.modules.api.dao.ApiCommentDao">
    
	<sql id="goCommentColumns">
		a.comment_id AS "commentId",
		a.comment_content AS "commentContent",
		a.status AS "status",
		a.is_reply AS "isReply",
		a.reply_comment_id AS "replyCommentId",
		a.reply_uid AS "replyUid",
		a.post_uid AS "postUid",
		a.photo_id AS "photoId",
		a.create_by AS "createBy.id",
		a.create_date AS "createDate",
		a.update_by AS "updateBy.id",
		a.update_date AS "updateDate",
		a.remarks AS "remarks",
		a.del_flag AS "delFlag",
		a.del_by AS "delBy"
	</sql>
	
	<sql id="goCommentJoins">
	</sql>
    
	<select id="get" resultType="ApiComment">
		SELECT 
			<include refid="goCommentColumns"/>
		FROM go_comment a
		<include refid="goCommentJoins"/>
		WHERE a.comment_id = #{id} 
	</select>
	
	<select id="findList" resultType="ApiComment">
		SELECT 
			<include refid="goCommentColumns"/>
		FROM go_comment a
		<include refid="goCommentJoins"/>
		<where>
			a.del_flag = #{DEL_FLAG_NORMAL}
		</where>
	
			<if test="startId != null and startId != '' and startId !='0'">
				AND a.comment_id
					<choose>
						<when test='forward == "Y"'>
						>
						</when>
						<otherwise>	
						 &lt;
						</otherwise>
					</choose>	
				#{startId}
			</if>
	
			<if test="photoId != null and photoId != ''">
				AND a.photo_id=#{photoId}
			</if>
		<choose>
			<when test="page !=null and page.orderBy != null and page.orderBy != ''">
				ORDER BY ${page.orderBy}
			</when>
				<otherwise>	
			ORDER BY a.comment_id DESC
			</otherwise>
		</choose>
		<choose>
			<when test="limit !=null and limit != ''">
					limit 0,${limit}
			</when>
				<otherwise>	
			limit 0,10
			</otherwise>
		</choose>
	</select>
	
	<select id="findListByParams" parameterType="Map" resultType="ApiComment">
		SELECT 
			<include refid="goCommentColumns"/>
		FROM go_comment a
		<include refid="goCommentJoins"/>
		<where>
			a.del_flag=0
		</where>
			<if test="startId != null and startId != '' and startId !='0'">
				AND a.comment_id
					<choose>
						<when test='forward == "Y"'>
						>
						</when>
						<otherwise>	
						 &lt;
						</otherwise>
					</choose>	
				#{startId}
			</if>
	
			<if test="photoId != null and photoId != ''">
				AND a.photo_id=#{photoId}
			</if>
			ORDER BY a.comment_id DESC
		<choose>
			<when test="limit !=null and limit != ''">
					limit 0,${limit}
			</when>
				<otherwise>	
			limit 0,10
			</otherwise>
		</choose>
	</select>
	
	<select id="findAllList" resultType="ApiComment">
		SELECT 
			<include refid="goCommentColumns"/>
		FROM go_comment a
		<include refid="goCommentJoins"/>
		<where>
			a.del_flag = #{DEL_FLAG_NORMAL}
		</where>		
		<choose>
			<when test="page !=null and page.orderBy != null and page.orderBy != ''">
				ORDER BY ${page.orderBy}
			</when>
			<otherwise>
				ORDER BY a.update_date DESC
			</otherwise>
		</choose>
	</select>
	
	<select id="findByIdIn" resultType="Article">
		SELECT 
			<include refid="goCommentColumns"/>
		FROM go_comment a
		<where>
			comment_id in (${id});
		</where>		
	</select>
	<select id="findListByProcedure" parameterType="Map"  statementType="CALLABLE"  resultType="ApiComment">
 	  <![CDATA[  
	 	{
		  call Pro_SelectCommentByPhotoIds(
		  #{photoids}
		  ,#{limit}
		  )
	    }
        ]]> 
	</select>
	
	<select id="findTest"  statementType="CALLABLE"  resultType="ApiComment">
	   call Pro_SelectTest()
	</select>
	
	<select id="proHello" statementType="CALLABLE">  
    <![CDATA[  
        {call pro_hello (#{p_user_name,mode=IN,jdbcType=VARCHAR})}  
    ]]>  
    </select>  
	<!--
	<select id="findListByPhotoIds" resultType="ApiComment">
		SET @mid = "";
		SET @rownum = 0;
		SELECT *, case when @mid = photo_id then @rownum:=@rownum+1 else @rownum:=1 end rownum, @mid:=photo_id FROM go_comment 
		<where>
			del_flag = 0 AND 
			photo_id in
			<foreach item="item" index="index" collection="list" open="(" separator="," close=")">  
				#{item}  
			</foreach>
		</where>
		ORDER BY photo_id,create_date DESC;
	</select>
  -->
	<select id="findCountByPhotoId" resultType="int">
		SELECT 	COUNT(1) FROM go_comment
		del_flag = 0 AND 
		photo_id = #{photoId}
	</select>
	
	<select id="getNext" parameterType="Map" resultType="ApiComment">
		SELECT
		<include refid="goCommentColumns"/>
		 FROM go_comment a
		<where>
			a.del_flag = 0
		</where>
	
			<if test="startId != null and startId != ''">
				AND a.comment_id
					<choose>
						<when test='forward == "Y"'>
						>
						</when>
						<otherwise>	
						 &lt;
						</otherwise>
					</choose>	
				#{startId}
			</if>
			
			<if test="photoId != null and photoId != ''">
				AND a.photo_id=#{photoId}
			</if>
		<choose>
			<when test="page !=null and page.orderBy != null and page.orderBy != ''">
				ORDER BY ${page.orderBy}
			</when>
			<otherwise>	
			ORDER BY a.comment_id DESC	 
			</otherwise>
		</choose>
		limit 0,1
	</select>
	
	
	<insert id="insert">
		INSERT INTO go_comment(
			comment_content,
			post_uid,
			photo_id,
			is_reply,
			reply_comment_id,
			reply_uid,
			create_date,
			remarks,
			del_flag

		) VALUES (
			#{commentContent},
			#{postUid},
			#{photoId},
			#{isReply},
			#{replyCommentId},
			#{replyUid},
			#{createDate},
			#{remarks},
			#{delFlag}

		)
	</insert>
	
	<update id="update">
		UPDATE go_comment SET 	
			comment_content = #{commentContent},
			status = #{status},
			post_uid = #{postUid},
			photo_id = #{photoId},
			update_by = #{updateBy.id},
			update_date = #{updateDate},
			remarks = #{remarks},
			del_by = #{delBy}
		WHERE comment_id = #{id}
	</update>
	
	<update id="delete">
		UPDATE go_comment SET 
			del_flag = #{DEL_FLAG_DELETE},
			del_by   = #{postUid},
			update_date = #{updateDate}
		WHERE comment_id = #{commentId} AND post_uid = #{postUid}
	</update>
	
</mapper>