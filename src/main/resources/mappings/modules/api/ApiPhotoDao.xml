<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.gome.trend.modules.api.dao.ApiPhotoDao">
    
	<sql id="goPhotoColumns">
		a.photo_id AS "photoId",
		a.intro AS "intro",
		a.width AS "width",
		a.height AS "height",
		a.photo_path AS "photoPath",
		a.uid AS "uid",
		a.color AS "color",
		a.status AS "status",
		a.create_by AS "createBy.id",
		a.comment_count AS "commentCount",
		a.like_count AS "likeCount",
		a.tag_count AS "tagCount"
	</sql>
	
	<sql id="goPhotoJoins">
	</sql>
    
	<select id="get" resultType="ApiPhoto">
		SELECT 
			<include refid="goPhotoColumns"/>
		FROM go_photo a
		<include refid="goPhotoJoins"/>
		WHERE a.id = #{id}
	</select>
	
	<select id="findList" resultType="ApiPhoto">
		SELECT 
			<include refid="goPhotoColumns"/>
		FROM go_photo a
		<include refid="goPhotoJoins"/>
		<where>
			a.del_flag = #{DEL_FLAG_NORMAL}
		</where>
		<choose>
			<when test="startId != null and startId != ''">
				AND a.photo_id>#{startId}
			</when>
			<when test="page !=null and page.orderBy != null and page.orderBy != ''">
				ORDER BY ${page.orderBy}
			</when>
			<otherwise>
				ORDER BY a.photo_id DESC
			</otherwise>
		</choose>
	</select>
	
		
	<select id="findListByParams" parameterType="Map" resultType="ApiPhoto">
		SELECT 
			<include refid="goPhotoColumns"/>
		FROM go_photo a
		<include refid="goPhotoJoins"/>
		<where>
			a.del_flag=0
		</where>
			<if test="startId != null and startId != '' and startId !='0'">
				AND a.photo_id
					<choose>
						<when test='forward == "Y"'>
						>
						</when>
						<otherwise>	
						 &lt;
						</otherwise>
					</choose>	
				#{startId}
			</if>
			ORDER BY a.photo_id DESC
		<choose>
			<when test="limit !=null and limit != ''">
					limit 0,${limit}
			</when>
			<otherwise>	
			limit 0,10
			</otherwise>
		</choose>
	</select>
	
	<select id="findAllList" resultType="ApiPhoto">
		SELECT 
			<include refid="goPhotoColumns"/>
		FROM go_photo a
		<include refid="goPhotoJoins"/>
		<where>
			a.del_flag = #{DEL_FLAG_NORMAL}
		</where>		
		<choose>
			<when test="page !=null and page.orderBy != null and page.orderBy != ''">
				ORDER BY ${page.orderBy}
			</when>
			<otherwise>
				ORDER BY a.update_date DESC
			</otherwise>
		</choose>
	</select>
	
	<insert id="insert">
		INSERT INTO go_photo(
			photo_id,
			intro,
			width,
			height,
			photo_path,
			uid,
			color,
			status,
			create_by,
			create_date,
			update_by,
			update_date,
			remarks,
			del_flag
		) VALUES (
			#{photoId},
			#{intro},
			#{width},
			#{height},
			#{photoPath},
			#{uid},
			#{color},
			#{status},
			#{createBy.id},
			#{createDate},
			#{updateBy.id},
			#{updateDate},
			#{remarks},
			#{delFlag}
		)
	</insert>
	<update id="updateCount" parameterType="Map">
		UPDATE go_photo SET  ${field}=${field}
			<choose>
				<when test='inc == "d"'>
				-
				</when>
				<otherwise>
				+
				</otherwise>
			</choose>
			1  	
		WHERE photo_id = #{photoId}
	</update>
	
	<update id="setCount" parameterType="Map">
		UPDATE go_photo SET ${field}=${value}
		WHERE photo_id = #{photoId}
	</update>
	
	<update id="update">
		UPDATE go_photo SET 	
			photo_id = #{photoId},
			intro = #{intro},
			width = #{width},
			height = #{height},
			photo_path = #{photoPath},
			uid = #{uid},
			color = #{color},
			status = #{status},
			update_by = #{updateBy.id},
			update_date = #{updateDate},
			remarks = #{remarks}
		WHERE photo_id = #{photoId}
	</update>
	
	<update id="delete">
		UPDATE go_photo SET 
			del_flag = #{DEL_FLAG_DELETE}
		WHERE photo_id = #{photoId}
	</update>
	
</mapper>